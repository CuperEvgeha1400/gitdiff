version: '3.4'
services:
  backend:
    container_name: git_diff
    build:
      context: backend/
    command: bash -c "python /app/manage.py makemigrations app && python /app/manage.py migrate --noinput && python /app/manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend/:/app
    ports:
      - 8000:8000
    env_file:
      - envs/backend.env
    restart:
      on-failure
    networks:
      - gitlab_net
      - front_back

  frontend:
    build:
      context: frontend/
    ports:
      - 80:80
    depends_on:
      - backend
    restart:
      on-failure
    networks:
      - front_back

  redis:
    image: redis:latest
    ports:
      - 6379:6379
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 30s
      retries: 50
    restart: on-failure

  gitlab:
    image: 'gitlab/gitlab-ee:latest'
    restart: always
    hostname: 'gitlab.example.com'
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        gitlab_rails['gitlab_shell_ssh_port'] = 22
        external_url 'http://gitlab.example.com:443'
    ports:
      - '81:80'
      - '443:443'
      - '22:22'
    volumes:
      - /data/docker/gitlab/etc/gitlab:/etc/gitlab
      - /data/docker/gitlab/var/opt/gitlab:/var/opt/gitlab
      - /data/docker/gitlab/var/log/gitlab:/var/log/gitlab
    shm_size: '256m'
    networks:
      - gitlab_net

  gitlab-runner:
    image: gitlab/gitlab-runner:alpine
    restart: unless-stopped
    depends_on:
      - gitlab
    volumes:
      - /data/docker/gitlab/etc/gitlab-runner:/etc/gitlab-runner
      - /data/docker/gitlab/var/run/docker.sock:/var/run/docker.sock
    networks:
      - gitlab_net

networks:
  gitlab_net:
  front_back:
